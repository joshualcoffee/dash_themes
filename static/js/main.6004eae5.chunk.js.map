{"version":3,"sources":["Chart.jsx","Presentation.jsx","App.js","serviceWorker.js","index.js"],"names":["Chart","data","width","height","dataKey","yAxisId","axisLine","tickLine","orientation","type","brandAwarenessData","reports","totals","report_data","StyledText","styled","Text","HeaderText","HeaderSubText","template","justifyContent","position","bottom","padding","theme","fonts","header","text","Slide1","flexDirection","alignItems","backgroundColor","pl","flex","mt","gridGap","mb","gridTemplateColumns","color","textAlign","fontSize","margin","impressions","clicks","ctr","intervals","Slide2","ml","pt","App","div","Presentation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6004eae5.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  ComposedChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Area,\n  CartesianGrid,\n  theme,\n} from \"recharts\";\n\nconst Chart = ({ data }) => {\n  return (\n    <ComposedChart width={800} height={300} data={data}>\n      <XAxis dataKey=\"start_date\" />\n      <YAxis yAxisId=\"left\" axisLine={false} tickLine={false} />\n      <YAxis\n        yAxisId=\"right\"\n        orientation=\"right\"\n        axisLine={false}\n        tickLine={false}\n      />\n      <Bar yAxisId=\"left\" dataKey=\"totals.spend\" />\n      <Area yAxisId=\"right\" dataKey=\"totals.leads\" type=\"monotone\" />\n    </ComposedChart>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport {\n  Appear,\n  Box,\n  CodePane,\n  CodeSpan,\n  Deck,\n  FlexBox,\n  FullScreen,\n  Grid,\n  Heading,\n  Image,\n  ListItem,\n  Markdown,\n  Notes,\n  OrderedList,\n  Progress,\n  Slide,\n  SpectacleLogo,\n  Stepper,\n  Text,\n  UnorderedList,\n  indentNormalizer,\n} from \"spectacle\";\nimport Chart from \"./Chart\";\nimport data from \"./data\";\nimport styled from \"styled-components\";\nconst brandAwarenessData = data.reports[\"brand_awareness-41\"];\nconst totals = brandAwarenessData.data.report_data.totals;\nconst StyledText = styled(Text)`\n  padding: 0px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n`;\n\nconst HeaderText = styled(StyledText)`\n  font-size: 28px;\n  color: #eb4f34;\n`;\nconst HeaderSubText = styled(StyledText)`\n  font-size: 18px;\n  color: #ebc334;\n  margin-left: 20px;\n`;\n\nconst template = () => (\n  <FlexBox\n    justifyContent=\"space-between\"\n    position=\"absolute\"\n    bottom={-15}\n    width={1}\n  >\n    <Box padding=\"0 1em\">\n      <FullScreen />\n    </Box>\n    <Box padding=\"1em\">\n      <Progress />\n    </Box>\n  </FlexBox>\n);\nconst theme = {\n  fonts: {\n    header: '\"Open Sans Condensed\", Helvetica, Arial, sans-serif',\n    text: '\"Open Sans Condensed\", Helvetica, Arial, sans-serif',\n  },\n};\n\nconst Slide1 = () => (\n  <FlexBox\n    flexDirection=\"column\"\n    alignItems=\"flex-start\"\n    position=\"relative\"\n    height=\"100%\"\n  >\n    <FlexBox\n      backgroundColor=\"white\"\n      height=\"10%\"\n      justifyContent=\"start\"\n      alignItems=\"center\"\n      width=\"100%\"\n    >\n      <FlexBox\n        justifyContent=\"start\"\n        alignItems=\"center\"\n        pl=\"30px\"\n        width=\"100%\"\n      >\n        <HeaderText>Campaign Performance</HeaderText>\n        <HeaderSubText>August</HeaderSubText>\n      </FlexBox>\n    </FlexBox>\n    <FlexBox\n      flexDirection=\"column\"\n      alignItems=\"flex-start\"\n      justifyContent=\"start\"\n      flex=\"1\"\n      width=\"100%\"\n    >\n      <Box mt=\"30px\" width=\"100%\">\n        <Grid gridGap={50} mb=\"80px\" gridTemplateColumns={\"auto auto auto\"}>\n          <Box padding={\"10px\"} backgroundColor=\"white\">\n            <StyledText color=\"#1e2852\" textAlign={\"center\"} fontSize={\"18px\"}>\n              Impressions\n            </StyledText>\n            <Text\n              padding=\"0px\"\n              margin=\"0px\"\n              color=\"black\"\n              textAlign={\"center\"}\n              fontSize={\"28px\"}\n            >\n              {totals.impressions}\n            </Text>\n          </Box>\n          <Box padding={10} backgroundColor=\"white\">\n            <StyledText color=\"#1e2852\" textAlign={\"center\"} fontSize={\"18px\"}>\n              Clicks\n            </StyledText>\n            <Text\n              padding=\"0px\"\n              margin=\"0px\"\n              color=\"black\"\n              textAlign={\"center\"}\n              fontSize={\"28px\"}\n            >\n              {totals.clicks}\n            </Text>\n          </Box>\n          <Box padding={10} backgroundColor=\"white\">\n            <StyledText color=\"#1e2852\" textAlign={\"center\"} fontSize={\"18px\"}>\n              CTR\n            </StyledText>\n            <Text\n              padding=\"0px\"\n              margin=\"0px\"\n              color=\"black\"\n              textAlign={\"center\"}\n              fontSize={\"28px\"}\n            >\n              {totals.ctr}\n            </Text>\n          </Box>\n        </Grid>\n      </Box>\n      <FlexBox width=\"100%\" flex={1}>\n        <Chart data={brandAwarenessData.data.report_data.intervals} />\n      </FlexBox>\n    </FlexBox>\n    <FlexBox backgroundColor=\"white\" width=\"100%\" height=\"15%\">\n      Footer\n    </FlexBox>\n  </FlexBox>\n);\n\nconst Slide2 = () => (\n  <FlexBox\n    flexDirection=\"column\"\n    alignItems=\"flex-start\"\n    position=\"relative\"\n    height=\"100%\"\n  >\n    <FlexBox\n      backgroundColor=\"white\"\n      height=\"10%\"\n      justifyContent=\"start\"\n      alignItems=\"center\"\n      width=\"100%\"\n    >\n      <FlexBox\n        justifyContent=\"start\"\n        alignItems=\"center\"\n        pl=\"30px\"\n        width=\"100%\"\n      >\n        <HeaderText>Campaign Performance</HeaderText>\n        <HeaderSubText>August</HeaderSubText>\n      </FlexBox>\n    </FlexBox>\n    <FlexBox\n      flexDirection=\"row\"\n      alignItems=\"flex-start\"\n      justifyContent=\"start\"\n      flex=\"1\"\n      width=\"100%\"\n    >\n      <FlexBox flex=\"0.7\">\n        <Box mt=\"30px\" width=\"100%\">\n          <Grid gridGap={50} mb=\"80px\" gridTemplateColumns={\"auto auto auto\"}>\n            <Box padding={\"10px\"} backgroundColor=\"white\">\n              <StyledText\n                color=\"#1e2852\"\n                textAlign={\"center\"}\n                fontSize={\"18px\"}\n              >\n                Impressions\n              </StyledText>\n              <Text\n                padding=\"0px\"\n                margin=\"0px\"\n                color=\"black\"\n                textAlign={\"center\"}\n                fontSize={\"28px\"}\n              >\n                {totals.impressions}\n              </Text>\n            </Box>\n            <Box padding={10} backgroundColor=\"white\">\n              <StyledText\n                color=\"#1e2852\"\n                textAlign={\"center\"}\n                fontSize={\"18px\"}\n              >\n                Clicks\n              </StyledText>\n              <Text\n                padding=\"0px\"\n                margin=\"0px\"\n                color=\"black\"\n                textAlign={\"center\"}\n                fontSize={\"28px\"}\n              >\n                {totals.clicks}\n              </Text>\n            </Box>\n            <Box padding={10} backgroundColor=\"white\">\n              <StyledText\n                color=\"#1e2852\"\n                textAlign={\"center\"}\n                fontSize={\"18px\"}\n              >\n                CTR\n              </StyledText>\n              <Text\n                padding=\"0px\"\n                margin=\"0px\"\n                color=\"black\"\n                textAlign={\"center\"}\n                fontSize={\"28px\"}\n              >\n                {totals.ctr}\n              </Text>\n            </Box>\n          </Grid>\n        </Box>\n      </FlexBox>\n      <FlexBox ml={32} pt={\"32px\"} flex=\"0.3\">\n        <Box>\n          <Text fontSize=\"22px\" padding=\"0px\" margin=\"0px\" mb=\"10px\">\n            Total Exposure Time\n          </Text>\n          <Text padding=\"0px\" margin=\"0px\" fontSize=\"18px\">\n            The total time in hours that the ad was active and viewable\n          </Text>\n          <Text fontSize=\"22px\" padding=\"0px\" margin=\"0px\" mt=\"30px\" mb=\"10px\">\n            Takeaways\n          </Text>\n          <Text padding=\"0px\" margin=\"0px\" fontSize=\"18px\">\n            Changing out creative to have more variety has improved\n            click-through rate month over month. We have seen a steady\n            improvement in clickthrough rate over the last few months.\n          </Text>\n          <Text fontSize=\"22px\" padding=\"0px\" margin=\"0px\" mt=\"30px\" mb=\"10px\">\n            Recommendations\n          </Text>\n          <Text padding=\"0px\" margin=\"0px\" fontSize=\"18px\">\n            I suggest continuing on this strategy and expanding placements like\n            our Paramount.\n          </Text>\n        </Box>\n      </FlexBox>\n    </FlexBox>\n    <FlexBox backgroundColor=\"white\" width=\"100%\" height=\"15%\">\n      Footer\n    </FlexBox>\n  </FlexBox>\n);\n\nfunction App() {\n  return (\n    <Deck theme={theme} template={template}>\n      <Slide>\n        <Slide1 />\n      </Slide>\n      <Slide>\n        <Slide2 />\n      </Slide>\n    </Deck>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport data from \"./data\";\nimport Chart from \"./Chart\";\nimport Presentation from \"./Presentation\";\nconst brandAwarenessData = data.reports[\"brand_awareness-41\"];\nconst Wrapper = styled.div`\n  background: #37474f;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Canvas = styled.div`\n  width: 100vw;\n  max-width: 1377px;\n  height: 700px;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nfunction App() {\n  return (\n    <Wrapper>\n      <Canvas>\n        <Chart data={brandAwarenessData.data.report_data.intervals} />\n      </Canvas>\n    </Wrapper>\n  );\n}\n\nexport default Presentation;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}